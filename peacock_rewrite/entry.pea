import { Highlight } from "./misc"
import { skills, skill_context } from "./store"

class Expandable < Element =
  color true = "white"
  color _ = "unset"
  style { open } _ = "
    transition: height 200ms ease, background-color 300ms ease-out 0ms;
    background-color: #{color open};
    &:hover {
      background-color: white;
    }
  "
  view { open, children } _ _ =
    <details open={open}>
      {children}
    </details>

class Skill < Element =
  style _ _ = "
    div {
      text-decoration: underline dotted;
      text-decoration-thickness: 1px;
    }
  "
  context = skill_context
  show_comma true = ", "
  show_comma _ = nil
  selected? selected_skill =
    current_skill := props[:skill]
    return true if current_skill == selected_skill
    skill := skills.flat.find #{ %[:parent] == selected_skill }
    return false if skill.nil?
    skill[:sub_skills].has? current_skill
  view { comma, skill } _ selected_skill =
    <span>
      <Highlight active={selected? selected_skill}>
        {skill}
      </Highlight>
      {show_comma comma}
    </span>

export class Entry < Element =
  style _ _ = "
    summary {
      list-style: none;
      cursor: pointer;
      margin: 0 20% 0 20%;
      h2 {
        text-decoration: underline;
        text-decoration-thickness: 1px;
      }
      .position-and-range {
        display: flex;
        justify-content: space-between;
      }
    }
    article {
      font-size: 17px;
      cursor: pointer;
      margin: 0 20% 0 20%;
    }
  "
  context = skill_context
  open? selected_skill =
    return true if props[:skills].has? selected_skill
    skills.flat
      .find #{ %[:parent] == selected_skill }
      &[:sub_skills]&.any? #{ props[:skills].has?(%) }
      .to_b
  view { title, position, date_range, children, skills } _ selected_skill =
    <div>
      <Expandable open={open? selected_skill}>
        <summary>
          <h2>{title}</h2>
          <div class_name="position-and-range">
            <em>{position}</em>
            <em>{date_range}</em>
          </div>
        </summary>
        <article>
          {children}
          <div>
            {"["}
            {skills.map fn skill i l =>
              <Skill
                skill={skill}
                comma={i < l.last_index}
              />
            end}
            {"]"}
          </div>
        </article>
      </Expandable>
    </div>
