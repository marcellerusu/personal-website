import { Highlight } from "./misc"
import { skills, skill_context } from "./store"

class Expandable < Details =
  style = "
    transition: height 200ms ease, background-color 300ms ease-out 0ms;
    &:hover {
      background-color: white;
    }
  "

class Skills < Div =
  style = "
    text-decoration: underline dotted;
    text-decoration-thickness: 1px;
  "

class Skill < Element =
  context = skill_context
  comma cond =
    if cond
      ", "
    else
      nil
    end
  selected? selected_skill =
    if props[:skill] == selected_skill
      return true
    end
    skill := skills.flat.find #{ %[:parent] == selected_skill }
    if skill.nil?
      return false
    else
      return skill[:sub_skills].has? props[:skill]
    end
  view props _ selected_skill =
    <span>
      <Highlight active={selected? selected_skill}>{props[:skill]}</Highlight>
      {comma props[:comma]}
    </span>

export class Entry < Element =
  style = "
    summary {
      list-style: none;
      cursor: pointer;
      margin: 0 20% 0 20%;
      h2 {
        text-decoration: underline;
        text-decoration-thickness: 1px;
      }
      .position-and-range {
        display: flex;
        justify-content: space-between;
      }
    }
    article {
      font-size: 17px;
      cursor: pointer;
      margin: 0 20% 0 20%;
    }
  "
  context = skill_context
  open? selected_skill =
    if props[:skills].has? selected_skill
      return true
    end
    skill := skills.flat.find #{ %[:parent] == selected_skill }
    if skill.nil?
      return false
    end
    return skill[:sub_skills].any? #{ props[:skills].has?(%) }

  view props _ selected_skill =
    <div>
      <Expandable open={open? selected_skill}>
        <summary>
          <h2>{props[:title]}</h2>
          <div class_name="position-and-range">
            <em>{props[:position]}</em>
            <em>{props[:date_range]}</em>
          </div>
        </summary>
        <article>
          {props[:children]}
          <Skills>
            {"["}
            {props[:skills].map fn skill i l =>
              <Skill
                skill_context={props[:skill_context]}
                skill={skill}
                comma={i < l.last_index}
              />
            end}
            {"]"}
          </Skills>
        </article>
      </Expandable>
    </div>